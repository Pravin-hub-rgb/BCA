name: Update Commit Data
on:
  schedule:
    - cron: '0 * * * *' # Runs every hour
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  update-commits:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repo
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0  # Fetch full history for accurate commit count
      
    - name: Create data directory
      run: |
        mkdir -p public/git-data
        
    - name: Get commit data with error handling
      run: |
        set -e  # Exit on any error
        
        echo "Fetching recent commits..."
        # Get last 5 commits with retry logic
        for i in {1..3}; do
          if curl -s -f -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/Pravin-hub-rgb/BCA/commits?per_page=5" \
            > public/git-data/recent-commits.json; then
            echo "‚úÖ Recent commits fetched successfully"
            break
          else
            echo "‚ùå Attempt $i failed, retrying..."
            sleep 5
          fi
        done
        
        # Validate JSON format
        if ! jq empty public/git-data/recent-commits.json 2>/dev/null; then
          echo "‚ùå Invalid JSON in recent-commits.json"
          exit 1
        fi
        
        echo "Getting total commit count..."
        # Use git directly for more reliable commit count
        COMMIT_COUNT=$(git rev-list --count HEAD)
        echo "Total commits found: $COMMIT_COUNT"
        echo $COMMIT_COUNT > public/git-data/total-commits.txt
        
        echo "Getting last updated timestamp..."
        # Get the most recent commit date
        LAST_COMMIT_DATE=$(git log -1 --format="%aI")
        echo "Last commit date: $LAST_COMMIT_DATE"
        echo $LAST_COMMIT_DATE > public/git-data/last-updated.txt
        
        # Add a generation timestamp for debugging
        date -u +"%Y-%m-%dT%H:%M:%SZ" > public/git-data/generated-at.txt
        
        echo "‚úÖ All data files generated successfully"
        ls -la public/git-data/

    - name: Validate generated files
      run: |
        echo "Validating generated files..."
        
        # Check if all files exist and are not empty
        for file in recent-commits.json total-commits.txt last-updated.txt; do
          if [[ ! -s "public/git-data/$file" ]]; then
            echo "‚ùå File $file is missing or empty"
            exit 1
          else
            echo "‚úÖ File $file exists and has content"
          fi
        done
        
        # Show file contents for debugging
        echo "=== File Contents ==="
        echo "Recent commits (first 200 chars):"
        head -c 200 public/git-data/recent-commits.json
        echo -e "\n\nTotal commits:"
        cat public/git-data/total-commits.txt
        echo -e "\nLast updated:"
        cat public/git-data/last-updated.txt
        echo -e "\nGenerated at:"
        cat public/git-data/generated-at.txt

    - name: Commit and push changes
      run: |
        git config --global user.name "GitHub Actions Bot"
        git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
        
        # Check if there are changes
        if git diff --quiet public/git-data/; then
          echo "No changes detected in git data files"
        else
          echo "Changes detected, committing..."
          git add public/git-data/
          git commit -m "ü§ñ Update commit data - $(date -u +'%Y-%m-%d %H:%M UTC') [skip ci]"
          
          # Push with retry logic
          for i in {1..3}; do
            if git push; then
              echo "‚úÖ Changes pushed successfully"
              break
            else
              echo "‚ùå Push attempt $i failed, retrying..."
              sleep 5
            fi
          done
        fi